<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Active">
    <value>活动</value>
  </data>
  <data name="AddNewTask">
    <value>添加新任务</value>
  </data>
  <data name="AddThisMilestone">
    <value>添加这个里程碑</value>
  </data>
  <data name="ChooseYourMilestoneDate">
    <value>选择一个日期</value>
  </data>
  <data name="Closed">
    <value>关闭</value>
  </data>
  <data name="ClosedMilestone">
    <value>已完成的里程碑</value>
  </data>
  <data name="CreateNewMilestone">
    <value>计划新的里程碑</value>
  </data>
  <data name="Date">
    <value>日期</value>
  </data>
  <data name="DaysAfterDeadLine">
    <value>{0} 截止日期之后</value>
  </data>
  <data name="DaysBeforeDeadLine">
    <value>{0} 截止日期之前</value>
  </data>
  <data name="DeadLine">
    <value>截止日期</value>
  </data>
  <data name="Delete">
    <value>删除里程碑</value>
  </data>
  <data name="Edit">
    <value>编辑</value>
  </data>
  <data name="EditMilestone">
    <value>编辑里程碑</value>
  </data>
  <data name="EmptyScreenHeaderContent">
    <value>为这个项目计划第一个里程碑</value>
  </data>
  <data name="EmptyScreenHeaderDescribe">
    <value>计划一个里程碑并设置一个日期 - 所有任务将会按时完成.</value>
  </data>
  <data name="EmptyScreenMilestoneTemplate">
    <value>为此项目模板设置第一个里程碑</value>
  </data>
  <data name="EmptyScreenMilestoneTemplateDescription">
    <value>计划的一个里程碑，并设置截止日期，调整项目进度。</value>
  </data>
  <data name="Example">
    <value>例如，测试版发布</value>
  </data>
  <data name="FinishMilestone">
    <value>完成里程碑</value>
  </data>
  <data name="InTrash">
    <value>在回收站</value>
  </data>
  <data name="KeepShiftedMilestoneOffWeekend">
    <value>不要为周末设置里程碑</value>
  </data>
  <data name="LateMilestone">
    <value>逾期的里程碑</value>
  </data>
  <data name="Legend">
    <value>日历图例</value>
  </data>
  <data name="Milestone">
    <value>里程碑</value>
  </data>
  <data name="MilestoneAdded">
    <value>正在添加里程碑...</value>
  </data>
  <data name="MilestoneDate">
    <value>截止日期</value>
  </data>
  <data name="MilestoneDeadlineLateInfo">
    <value>延迟自{0}</value>
  </data>
  <data name="MilestoneNotFound_Body">
    <value>它可能已经被删除，或者项目中没有这样ID的里程碑。</value>
  </data>
  <data name="MilestoneNotFound_Header">
    <value>没有找到里程碑</value>
  </data>
  <data name="MilestoneNotFound_RedirectTitle">
    <value>转到里程碑列表</value>
  </data>
  <data name="Milestones">
    <value>里程碑</value>
  </data>
  <data name="MilestoneStatusLabel_Active">
    <value>{0}正在进行{1} 直到</value>
  </data>
  <data name="MilestoneStatusLabel_Closed">
    <value>{0}关闭{1} 在</value>
  </data>
  <data name="MilestoneStatusLabel_Late">
    <value>{0}逾期{1} 自</value>
  </data>
  <data name="MilestoneTitle">
    <value>标题</value>
  </data>
  <data name="MoveToMilestone">
    <value>移动到里程碑</value>
  </data>
  <data name="NoOneMilestoneInProject">
    <value>项目中没有里程碑</value>
  </data>
  <data name="OpenMilestone">
    <value>正在进行的里程碑</value>
  </data>
  <data name="Progress">
    <value>进展</value>
  </data>
  <data name="RemindMe">
    <value>截止日期前48小时提醒我</value>
  </data>
  <data name="RestoreFromTrash">
    <value>还原</value>
  </data>
  <data name="ResumeMilestone">
    <value>恢复里程碑</value>
  </data>
  <data name="RootMilestone">
    <value>重要的里程碑</value>
  </data>
  <data name="SaveMilestone">
    <value>正在保存里程碑... ...</value>
  </data>
  <data name="ShiftMilestonesAnswer">
    <value>是的，也同时调整所有其他的里程碑</value>
  </data>
  <data name="ShiftMilestonesDescription">
    <value>您已经修改了当前里程碑的日期。您想要推移其他所有里程碑同样的天数吗？</value>
  </data>
  <data name="ShiftMilestonesQuestion">
    <value>同时调整所有其他的里程碑？</value>
  </data>
  <data name="Status">
    <value>状态</value>
  </data>
  <data name="StatusClosed">
    <value>关闭</value>
  </data>
  <data name="StatusOpen">
    <value>打开</value>
  </data>
  <data name="TasksInThisMilestone">
    <value>里程碑的任务</value>
  </data>
  <data name="TasksNotDone">
    <value>尚未完成的任务</value>
  </data>
  <data name="Total">
    <value>总数</value>
  </data>
</root>