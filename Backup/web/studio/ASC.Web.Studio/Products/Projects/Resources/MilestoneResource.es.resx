<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Active">
    <value>Activos</value>
  </data>
  <data name="AddNewTask">
    <value>Añadir nueva tarea</value>
  </data>
  <data name="AddThisMilestone">
    <value>Añadir este hito</value>
  </data>
  <data name="ChooseYourMilestoneDate">
    <value>Seleccione una fecha</value>
  </data>
  <data name="Closed">
    <value>Cerrados</value>
  </data>
  <data name="ClosedMilestone">
    <value>Hito terminado</value>
  </data>
  <data name="CreateNewMilestone">
    <value>Planificar nuevo hito</value>
  </data>
  <data name="Date">
    <value>Fecha</value>
  </data>
  <data name="DaysAfterDeadLine">
    <value>{0} después de fecha límite</value>
  </data>
  <data name="DaysBeforeDeadLine">
    <value>{0} antes de fecha límite</value>
  </data>
  <data name="DeadLine">
    <value>fecha límite</value>
  </data>
  <data name="Delete">
    <value>Eliminar hito</value>
  </data>
  <data name="Edit">
    <value>Editar</value>
  </data>
  <data name="EditMilestone">
    <value>Editar hito</value>
  </data>
  <data name="EmptyScreenHeaderContent">
    <value>Planifique el primer hito para este proyecto</value>
  </data>
  <data name="EmptyScreenHeaderDescribe">
    <value>Planifique un hito y fije una fecha - las tareas serán terminadas a tiempo.</value>
  </data>
  <data name="EmptyScreenMilestoneTemplate">
    <value>Establecer el primer hito en este proyecto</value>
  </data>
  <data name="EmptyScreenMilestoneTemplateDescription">
    <value>Planea el hito y fija el plazo, establece la programación del proyecto.</value>
  </data>
  <data name="Example">
    <value>Por ejemplo, la salida de la versión beta</value>
  </data>
  <data name="FinishMilestone">
    <value>Terminar hito</value>
  </data>
  <data name="InTrash">
    <value>En papelera</value>
  </data>
  <data name="KeepShiftedMilestoneOffWeekend">
    <value>No planificar hitos para fines de semana</value>
  </data>
  <data name="LateMilestone">
    <value>Hito caducado</value>
  </data>
  <data name="Legend">
    <value>Leyenda de calendario</value>
  </data>
  <data name="Milestone">
    <value>Hito</value>
  </data>
  <data name="MilestoneAdded">
    <value>Agregando hito...</value>
  </data>
  <data name="MilestoneDate">
    <value>Fecha límite</value>
  </data>
  <data name="MilestoneDeadlineLateInfo">
    <value>Caducado desde {0}</value>
  </data>
  <data name="MilestoneNotFound_Body">
    <value>Probablemente haya sido eliminado, o no haya ningún hito con tal ID en el proyecto</value>
  </data>
  <data name="MilestoneNotFound_Header">
    <value>Hito no encontrado</value>
  </data>
  <data name="MilestoneNotFound_RedirectTitle">
    <value>Ir a la lista de hitos</value>
  </data>
  <data name="Milestones">
    <value>Hitos</value>
  </data>
  <data name="MilestoneStatusLabel_Active">
    <value>{0}Activo{1} hasta</value>
  </data>
  <data name="MilestoneStatusLabel_Closed">
    <value>{0}Cerrado{1} en</value>
  </data>
  <data name="MilestoneStatusLabel_Late">
    <value>{0}Caducado{1} desde</value>
  </data>
  <data name="MilestoneTitle">
    <value>Título</value>
  </data>
  <data name="MoveToMilestone">
    <value>Mover a hito</value>
  </data>
  <data name="NoOneMilestoneInProject">
    <value>Ningún hito en el proyecto</value>
  </data>
  <data name="OpenMilestone">
    <value>Hito activo</value>
  </data>
  <data name="Progress">
    <value>Progreso</value>
  </data>
  <data name="RemindMe">
    <value>Recordarme 48 horas antes de la fecha límite</value>
  </data>
  <data name="RestoreFromTrash">
    <value>Restaurar</value>
  </data>
  <data name="ResumeMilestone">
    <value>Reanudar hito</value>
  </data>
  <data name="RootMilestone">
    <value>Hito clave</value>
  </data>
  <data name="SaveMilestone">
    <value>Guardando hito...</value>
  </data>
  <data name="ShiftMilestonesAnswer">
    <value>Sí, desplazar los demás hitos también</value>
  </data>
  <data name="ShiftMilestonesDescription">
    <value>Usted ha cambiado la fecha del hito actual. ¿Desea desplazar los demás hitos al mismo número de días?</value>
  </data>
  <data name="ShiftMilestonesQuestion">
    <value>¿Desplazar los demás hitos?</value>
  </data>
  <data name="Status">
    <value>Estado</value>
  </data>
  <data name="StatusClosed">
    <value>Cerrado</value>
  </data>
  <data name="StatusOpen">
    <value>Abierto</value>
  </data>
  <data name="TasksInThisMilestone">
    <value>Tareas en hito</value>
  </data>
  <data name="TasksNotDone">
    <value>tareas no terminadas</value>
  </data>
  <data name="Total">
    <value>Total</value>
  </data>
</root>