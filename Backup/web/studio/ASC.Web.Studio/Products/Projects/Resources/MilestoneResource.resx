<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="AddNewTask" xml:space="preserve">
    <value>Add new task</value>
  </data>
  <data name="AddThisMilestone" xml:space="preserve">
    <value>Add This Milestone</value>
  </data>
  <data name="ChooseYourMilestoneDate" xml:space="preserve">
    <value>Select a date</value>
  </data>
  <data name="Closed" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="ClosedMilestone" xml:space="preserve">
    <value>Completed milestone</value>
  </data>
  <data name="CreateNewMilestone" xml:space="preserve">
    <value>Plan new milestone</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DaysAfterDeadLine" xml:space="preserve">
    <value>{0} after due date</value>
  </data>
  <data name="DaysBeforeDeadLine" xml:space="preserve">
    <value>{0} before due date</value>
  </data>
  <data name="DeadLine" xml:space="preserve">
    <value>due date</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete milestone</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit </value>
  </data>
  <data name="EditMilestone" xml:space="preserve">
    <value>Edit milestone</value>
  </data>
  <data name="EmptyScreenHeaderContent" xml:space="preserve">
    <value>Plan the first milestone for this project</value>
  </data>
  <data name="EmptyScreenHeaderDescribe" xml:space="preserve">
    <value>Plan a milestone and set a date - the tasks will be completed on time.</value>
  </data>
  <data name="EmptyScreenMilestoneTemplate" xml:space="preserve">
    <value>Set the first milestone for this project template</value>
  </data>
  <data name="EmptyScreenMilestoneTemplateDescription" xml:space="preserve">
    <value>Plan a milestone and set a due date, adjust the project schedule.</value>
  </data>
  <data name="Example" xml:space="preserve">
    <value>For example, beta version release</value>
  </data>
  <data name="FinishMilestone" xml:space="preserve">
    <value>Complete Milestone</value>
  </data>
  <data name="InTrash" xml:space="preserve">
    <value>In Trash</value>
  </data>
  <data name="KeepShiftedMilestoneOffWeekend" xml:space="preserve">
    <value>Do not set milestones for weekends</value>
  </data>
  <data name="LateMilestone" xml:space="preserve">
    <value>Overdue milestone</value>
  </data>
  <data name="Legend" xml:space="preserve">
    <value>Calendar Legend</value>
  </data>
  <data name="Milestone" xml:space="preserve">
    <value>Milestone</value>
  </data>
  <data name="MilestoneAdded" xml:space="preserve">
    <value>Adding milestone...</value>
  </data>
  <data name="MilestoneDate" xml:space="preserve">
    <value>Due Date</value>
  </data>
  <data name="MilestoneDeadlineLateInfo" xml:space="preserve">
    <value>Delayed since {0}</value>
  </data>
  <data name="MilestoneNotFound_Body" xml:space="preserve">
    <value>Probably it has been deleted, or there are no milestones with such ID in the project</value>
  </data>
  <data name="MilestoneNotFound_Header" xml:space="preserve">
    <value>Milestone not found</value>
  </data>
  <data name="MilestoneNotFound_RedirectTitle" xml:space="preserve">
    <value>Go to the milestone list</value>
  </data>
  <data name="Milestones" xml:space="preserve">
    <value>Milestones</value>
  </data>
  <data name="MilestoneStatusLabel_Active" xml:space="preserve">
    <value>{0}Active{1} till</value>
  </data>
  <data name="MilestoneStatusLabel_Closed" xml:space="preserve">
    <value>{0}Closed{1} on</value>
  </data>
  <data name="MilestoneStatusLabel_Late" xml:space="preserve">
    <value>{0}Overdue{1} since</value>
  </data>
  <data name="MilestoneTitle" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="MoveToMilestone" xml:space="preserve">
    <value>Move to milestone</value>
  </data>
  <data name="NoOneMilestoneInProject" xml:space="preserve">
    <value>No milestones in project</value>
  </data>
  <data name="OpenMilestone" xml:space="preserve">
    <value>Active milestone</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Progress</value>
  </data>
  <data name="RemindMe" xml:space="preserve">
    <value>Remind me 48 hours before the due date</value>
  </data>
  <data name="RestoreFromTrash" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="ResumeMilestone" xml:space="preserve">
    <value>Resume Milestone</value>
  </data>
  <data name="RootMilestone" xml:space="preserve">
    <value>Key milestone</value>
  </data>
  <data name="SaveMilestone" xml:space="preserve">
    <value>Saving milestone...</value>
  </data>
  <data name="ShiftMilestonesAnswer" xml:space="preserve">
    <value>Yes, shift all the other milestones too</value>
  </data>
  <data name="ShiftMilestonesDescription" xml:space="preserve">
    <value>You have changed the date for the current milestone. Would you like to shift all the other milestones the same number of days?</value>
  </data>
  <data name="ShiftMilestonesQuestion" xml:space="preserve">
    <value>Shift all the other milestones?</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="StatusClosed" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="StatusOpen" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="TasksInThisMilestone" xml:space="preserve">
    <value>Tasks in milestone</value>
  </data>
  <data name="TasksNotDone" xml:space="preserve">
    <value>tasks not completed</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
</root>