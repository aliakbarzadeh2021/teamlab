<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept">
    <value>接受</value>
  </data>
  <data name="AddNewCategory">
    <value>添加新分类</value>
  </data>
  <data name="AllFiles">
    <value>所有文件</value>
  </data>
  <data name="AttachFiles">
    <value>附加文件</value>
  </data>
  <data name="Author">
    <value>作者</value>
  </data>
  <data name="B">
    <value>B</value>
  </data>
  <data name="Categories">
    <value>分类</value>
  </data>
  <data name="Category">
    <value>分类</value>
  </data>
  <data name="ChooseAFileToUpload">
    <value>选择要上传的文件</value>
  </data>
  <data name="ConfirmDelete">
    <value>您确定要删除这个文件吗？注：这个操作无法撤销。</value>
  </data>
  <data name="Documents">
    <value>文档</value>
  </data>
  <data name="EditCategories">
    <value>编辑分类</value>
  </data>
  <data name="EmptyScreenHeaderContent">
    <value>上传此项目的第一个文件</value>
  </data>
  <data name="EmptyScreenHeaderDescribe">
    <value>在项目内上传，下载和交换文件。</value>
  </data>
  <data name="File">
    <value>文件</value>
  </data>
  <data name="FileNotFound">
    <value>没有找到文件</value>
  </data>
  <data name="Files">
    <value>文件</value>
  </data>
  <data name="FilesInTheCategory">
    <value>分类«{0}»中的文件</value>
  </data>
  <data name="FileSizeNote">
    <value>注:文件大小不能超过 {1}{0}MB{2}.</value>
  </data>
  <data name="FilesWillBeRemoved">
    <value>这个分类下的所有文件将会被删除</value>
  </data>
  <data name="GoToFilesPage">
    <value>转到文件页面</value>
  </data>
  <data name="kb">
    <value>KB</value>
  </data>
  <data name="LastVersionPermanentLinkText">
    <value>最新版本的链接</value>
  </data>
  <data name="MB">
    <value>Mb</value>
  </data>
  <data name="NoCategory">
    <value>未分类</value>
  </data>
  <data name="OldFiles">
    <value>旧文件</value>
  </data>
  <data name="OtherVersions">
    <value>以前的版本</value>
  </data>
  <data name="OverallProgress">
    <value>总体进度</value>
  </data>
  <data name="Pictures">
    <value>照片</value>
  </data>
  <data name="ReadOnlyMode">
    <value>只读模式</value>
  </data>
  <data name="Size">
    <value>大小</value>
  </data>
  <data name="SortedBy_Alphabet">
    <value>A - Z</value>
  </data>
  <data name="SortedBy_DateAndTime">
    <value>日期和时间</value>
  </data>
  <data name="SortedBy_FileSize">
    <value>大小</value>
  </data>
  <data name="SwitchToNewInterface">
    <value>切换到新界面</value>
  </data>
  <data name="SwitchToOldInterface">
    <value>切换到旧版界面</value>
  </data>
  <data name="UpdateFileVersion">
    <value>更新文件版本 «{0}»</value>
  </data>
  <data name="UploadingFile">
    <value>正在上传文件«{0}»....</value>
  </data>
  <data name="UploadToCategory">
    <value>上传到分类</value>
  </data>
</root>