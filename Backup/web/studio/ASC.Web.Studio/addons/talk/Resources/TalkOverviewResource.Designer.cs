//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASC.Web.Talk.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class TalkOverviewResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TalkOverviewResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ASC.Web.Talk.Resources.TalkOverviewResource", typeof(TalkOverviewResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contact list is updated automatically as people are added/removed from the list of employees, so you don&apos;t have to check it out manually.  .
        /// </summary>
        public static string AutoupdateContactListDescription {
            get {
                return ResourceManager.GetString("AutoupdateContactListDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chat Tabs.
        /// </summary>
        public static string ChatTabs {
            get {
                return ResourceManager.GetString("ChatTabs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contact List Options.
        /// </summary>
        public static string ContactListWithOptions {
            get {
                return ResourceManager.GetString("ContactListWithOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You may use a third-party desktop/mobile IM client to access Talk. To do that, you&apos;ll need to integrate Talk with any IM client that supports Jabber/XMPP..
        /// </summary>
        public static string IntegrationWith3rdPartyAppsSectionContent {
            get {
                return ResourceManager.GetString("IntegrationWith3rdPartyAppsSectionContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Third-Party Software Support.
        /// </summary>
        public static string IntegrationWith3rdPartyAppsSectionTitle {
            get {
                return ResourceManager.GetString("IntegrationWith3rdPartyAppsSectionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message Field Options.
        /// </summary>
        public static string MessageFieldOptions {
            get {
                return ResourceManager.GetString("MessageFieldOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Miranda IM - the Miranda IM client home page.  Smaller, Faster, Easier.
        /// </summary>
        public static string MirandaIMLink {
            get {
                return ResourceManager.GetString("MirandaIMLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Talk is a corporate IM system for exchanging instant text messages among the employees in real time..
        /// </summary>
        public static string OverviewContent {
            get {
                return ResourceManager.GetString("OverviewContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Talk offers all the traditional features you expect from a messenger - choice of status, history archiving, file transfer, multi-user chat support, and more..
        /// </summary>
        public static string OverviewContentDescription {
            get {
                return ResourceManager.GetString("OverviewContentDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Talk Overview.
        /// </summary>
        public static string OverviewSectionTitle {
            get {
                return ResourceManager.GetString("OverviewSectionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch our web client to start using Talk right now with no prior settings. .
        /// </summary>
        public static string OverviewWebClientDescription {
            get {
                return ResourceManager.GetString("OverviewWebClientDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A free chat client used by millions. Connect easily to MSN, Google Talk, Yahoo, AIM and other chat networks all at once..
        /// </summary>
        public static string PidginLink {
            get {
                return ResourceManager.GetString("PidginLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Cross-Platform JabberXMPP Client For Power Users.
        /// </summary>
        public static string PsiLink {
            get {
                return ResourceManager.GetString("PsiLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recommended Clients.
        /// </summary>
        public static string Recommended {
            get {
                return ResourceManager.GetString("Recommended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screenshots.
        /// </summary>
        public static string ScreenshotsSectionTitle {
            get {
                return ResourceManager.GetString("ScreenshotsSectionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch Web Client.
        /// </summary>
        public static string StartWebClientLink {
            get {
                return ResourceManager.GetString("StartWebClientLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No extra settings! Click to launch web client and start talking right now.
        /// </summary>
        public static string StartWebClientLinkDescription {
            get {
                return ResourceManager.GetString("StartWebClientLinkDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To get Talk integrate with a third-party client, you&apos;ll need the following settings:{0}
        ///Server Name: {1}
        ///Server Address: {2}
        ///Connection Port: {3}
        ///Your User Name: {4}
        ///To connect you&apos;ll need to enter your Jabber ID {5} and password from your account..
        /// </summary>
        public static string ThirdPartyAppsSettingsSectionContent {
            get {
                return ResourceManager.GetString("ThirdPartyAppsSettingsSectionContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trillian - Windows, iPhone, and Web based instant messenger.  Supports Astra, Windows Live, Facebook, Twitter, Yahoo, MySpace, AIM, Email, Google Talk, Skype, ICQ, Jabber, IRC, Bonjour, and more!.
        /// </summary>
        public static string TrillianLink {
            get {
                return ResourceManager.GetString("TrillianLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status Changer.
        /// </summary>
        public static string YourStatusChanger {
            get {
                return ResourceManager.GetString("YourStatusChanger", resourceCulture);
            }
        }
    }
}
