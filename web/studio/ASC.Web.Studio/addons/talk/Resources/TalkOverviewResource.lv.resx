<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutoupdateContactListDescription">
    <value>Kontaktpersonu saraksts tiek atjaunots automātiski kāmer darbinieki tiek pievienoti/izdzēsti no darbinieku saraksta, tādā veidā jums nevajag to paņemt manuāli.  </value>
  </data>
  <data name="ChatTabs">
    <value>Čata Cilnes</value>
  </data>
  <data name="ContactListWithOptions">
    <value>Kontaktpersonu Saraksta Iestatījumi</value>
  </data>
  <data name="IntegrationWith3rdPartyAppsSectionContent">
    <value>Jūs varat izmantot pretējās puses galddatoru/mobilu tūlītēju ziņojumapmaiņas klientu lai piekļūtu Talk. Lai to izdarītu, jums vajadzēs integrēt Talk jebkurā  tūlītēju ziņojumapmaiņas klientā kurš atbalsta Jabber/XMPP.</value>
  </data>
  <data name="IntegrationWith3rdPartyAppsSectionTitle">
    <value>Pretējās puses Programmatūras Atbalsts</value>
  </data>
  <data name="MessageFieldOptions">
    <value>Ziņas Lauka Opcijas</value>
  </data>
  <data name="MirandaIMLink">
    <value>Miranda IM - Miranda IM  klienta mājas lapa.  Mazāka, Ātrāka, Vieglāka</value>
  </data>
  <data name="OverviewContent">
    <value>Talk ir korporatīva tūlītēju ziņojumapmaiņas sistēma tūlītēju ziņojumu apmaiņai starp darbiniekiem reālā laikā.</value>
  </data>
  <data name="OverviewContentDescription">
    <value>Talk piedāvā visus tradicionālus līdzekļus kurus jūs gaidat no tūlītējas ziņojumapmaiņas programmas - statusa izvēle,  vēstures athivēšana, failu pārsūtīšana, čats vairākiem lietotājiem, un vairāk.</value>
  </data>
  <data name="OverviewSectionTitle">
    <value>Talk Pārskats</value>
  </data>
  <data name="OverviewWebClientDescription">
    <value>Palaidiet mūsu web klientu lai sāktu lietot Talk tūlīt bez jebkādu iepriekšēju iestatījumu.</value>
  </data>
  <data name="PidginLink">
    <value>Bezmaksas čata klients kuru lieto milioni. Viegli pievienoties MSN, Google Talk, Yahoo, AIM un citiem čata tīklām vienlaicīgi.</value>
  </data>
  <data name="PsiLink">
    <value>Šķērplatforma JabberXMPP Klients Prasmīgiem Lietotājiem</value>
  </data>
  <data name="Recommended">
    <value>Ieteicami Klienti</value>
  </data>
  <data name="ScreenshotsSectionTitle">
    <value>Ekrānuzņēmums</value>
  </data>
  <data name="StartWebClientLink">
    <value>Palaist Web Klientu</value>
  </data>
  <data name="StartWebClientLinkDescription">
    <value>Nekādu papildu iestatījumu! Noklikšķiniet lai palaistu web klientu un sāktu sarunu tūlīt</value>
  </data>
  <data name="ThirdPartyAppsSettingsSectionContent">
    <value>Lai integrētu Talk pretējās puses klientos, jums būs nepieciešami sekojoši iestatījumi:{0}
    Servera Nosaukums{1}
Servera Adrese: {2}
Savienojuma Pieslēgvieta: {3}
Jūsu Lietotāja Vārds: {4}
lai savienotos jums būs jāievada jūsu Jabber ID {5} un jūsu akaunta paroli.</value>
  </data>
  <data name="TrillianLink">
    <value>Trillian - Windows, iPhone, un internetā balstītas tūlītējas ziņojumapmaiņas programmas.  Atbalsta Astra, Windows Live, Facebook, Twitter, Yahoo, MySpace, AIM, Email, Google Talk, Skype, ICQ, Jabber, IRC, Bonjour, un vairāk!</value>
  </data>
  <data name="YourStatusChanger">
    <value>Statusa Nomainītājs</value>
  </data>
</root>