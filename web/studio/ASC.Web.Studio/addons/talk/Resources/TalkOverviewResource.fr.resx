<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutoupdateContactListDescription">
    <value>La liste des contacts est actualisée automatiquement, dès que les personnes sont ajoutées/supprimées depuis la liste des employés; alors vous n'avez pas besoin de la vérifier manuellement.</value>
  </data>
  <data name="ChatTabs">
    <value>Onglets de conversation</value>
  </data>
  <data name="ContactListWithOptions">
    <value>Options de la liste des contacts</value>
  </data>
  <data name="IntegrationWith3rdPartyAppsSectionContent">
    <value>Vous pouvez utiliser le client de la messagerie instantanée mobile ou installé sur un ordinateur pour accéder au Chat. Pour le faire vous avez besoin d'intégrer le Chat à un client de la messagerie instantanée qui supporte Jabber/XMPP.</value>
  </data>
  <data name="IntegrationWith3rdPartyAppsSectionTitle">
    <value>Support par logiciels externes</value>
  </data>
  <data name="MessageFieldOptions">
    <value>Options du champ "Message"</value>
  </data>
  <data name="MirandaIMLink">
    <value>Miranda IM - la page d'accueil du client Miranda IM. Plus petit, plus rapide, plus facile</value>
  </data>
  <data name="OverviewContent">
    <value>Le Chat est un système de la messagerie instantanée d'entreprise pour l'échange de messages instantanés parmi les employés en temps réel.</value>
  </data>
  <data name="OverviewContentDescription">
    <value>Le Chat offre toutes les fonctionnalités traditionnelles du système de la messagerie instantanée - choix du statut, archivage de l'historique, transfert de fichiers, support de conversations multi-utilisateurs, et plus encore.</value>
  </data>
  <data name="OverviewSectionTitle">
    <value>Vue d'ensemble de Chat</value>
  </data>
  <data name="OverviewWebClientDescription">
    <value>Lancez notre client Web pour utiliser le Chat tout de suite sans réglages préalables.</value>
  </data>
  <data name="PidginLink">
    <value>Un client chat gratuit utilisé par des millions. Connectez-vous à MSN, Google Talk, Yahoo, AIM et autres réseaux tous ensemble.</value>
  </data>
  <data name="PsiLink">
    <value>Le client JabberXMPP multiplateforme pour les utilisateurs expérimentés</value>
  </data>
  <data name="Recommended">
    <value>Clients recommandés</value>
  </data>
  <data name="ScreenshotsSectionTitle">
    <value>Screenshots</value>
  </data>
  <data name="StartWebClientLink">
    <value>Lancer client Web</value>
  </data>
  <data name="StartWebClientLinkDescription">
    <value>Aucun réglage supplémentaire ! Cliquez pour lancer le client Web et commencer la conversation.</value>
  </data>
  <data name="ThirdPartyAppsSettingsSectionContent">
    <value>Pour intégrer le Chat à un client externe, vous aurez besoin d'effectuer les réglages suivants:{0}
Nom de serveur: {1}
Adresse de serveur: {2}
Port de connexion: {3}
Votre nom d'utilisateur: {4}
Pour vous connecter vous devez entrer votre identifiant Jabber {5} et le mot de passe de votre compte.</value>
  </data>
  <data name="TrillianLink">
    <value>Trillian - le système de messagerie instantanée pour Windows, iPhone et Web. Supporte Astra, Windows Live, Facebook, Twitter, Yahoo, MySpace, AIM, Email, Google Talk, Skype, ICQ, Jabber, IRC, Bonjour et plus encore !</value>
  </data>
  <data name="YourStatusChanger">
    <value>Changement de statut</value>
  </data>
</root>