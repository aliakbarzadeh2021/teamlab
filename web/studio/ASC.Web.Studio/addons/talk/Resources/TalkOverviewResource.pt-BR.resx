<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutoupdateContactListDescription">
    <value>A lista de contatos é atualizada automaticamente quando as pessoas são adicionadas/removidas da lista de contatos, então vc não tem que checar isso manualmente.  </value>
  </data>
  <data name="ChatTabs">
    <value>Tabelas de Conversa</value>
  </data>
  <data name="ContactListWithOptions">
    <value>Opções da Lista de Contatos</value>
  </data>
  <data name="IntegrationWith3rdPartyAppsSectionContent">
    <value>Você pode usar uma maquina de terceiros com IM client para acessar Talk. Para fazer isso, você precisa integrar Talk com qualquer IM client que suporta Jabber/XMPP.</value>
  </data>
  <data name="IntegrationWith3rdPartyAppsSectionTitle">
    <value>Suporte a Software de Terceiros</value>
  </data>
  <data name="MessageFieldOptions">
    <value>Opções de Campo de Mensagem</value>
  </data>
  <data name="MirandaIMLink">
    <value>Miranda IM - the Miranda IM client home page.  Smaller, Faster, Easier</value>
  </data>
  <data name="OverviewContent">
    <value>Talk é uma ferramenta IM system para trocar mensagens instantaneas entre seus contatos em tempo real.</value>
  </data>
  <data name="OverviewContentDescription">
    <value>Talk Oferece toda as opções tradicionais que você espera de um messenger - escolha de estatus, arquivamento de histórico, transferência de arquivos, suporte de conversa com multiplos usuários, e mais.</value>
  </data>
  <data name="OverviewSectionTitle">
    <value>Talk Visão geral</value>
  </data>
  <data name="OverviewWebClientDescription">
    <value>Iniciar nosso web client para começar a usar o Talk agora mesmo com opções. </value>
  </data>
  <data name="PidginLink">
    <value>A free chat client used by millions. Connect easily to MSN, Google Talk, Yahoo, AIM and other chat networks all at once.</value>
  </data>
  <data name="PsiLink">
    <value>The Cross-Platform JabberXMPP Client For Power Users</value>
  </data>
  <data name="Recommended">
    <value>Clientes Recomendados</value>
  </data>
  <data name="ScreenshotsSectionTitle">
    <value>Imagens rápidas</value>
  </data>
  <data name="StartWebClientLink">
    <value>Iniciar Cliente Web</value>
  </data>
  <data name="StartWebClientLinkDescription">
    <value>Sem configurações extras! Clique paraClick to launch web client and start talking right now</value>
  </data>
  <data name="ThirdPartyAppsSettingsSectionContent">
    <value>Para integrar Talk ao cliente terciário, você deve seguir estas configurações:{0}
Nome do Servidor: {1}
Endereço do Servidor: {2}
Porta de Conexão: {3}
Seu Nome de Usuário: {4}
Para conectar você precisa entrar com seu Jabber ID {5} e senha da sua conta.</value>
  </data>
  <data name="TrillianLink">
    <value>Trillian - Windows, iPhone, and Web based instant messenger.  Supports Astra, Windows Live, Facebook, Twitter, Yahoo, MySpace, AIM, Email, Google Talk, Skype, ICQ, Jabber, IRC, Bonjour, and more!</value>
  </data>
  <data name="YourStatusChanger">
    <value>Trocador de Estatus</value>
  </data>
</root>